//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ArrowArray : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ArrowArray(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ArrowArray obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(ArrowArray obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~ArrowArray() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          kuzunetPINVOKE.delete_ArrowArray(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public long length {
    set {
      kuzunetPINVOKE.ArrowArray_length_set(swigCPtr, value);
    } 
    get {
      long ret = kuzunetPINVOKE.ArrowArray_length_get(swigCPtr);
      return ret;
    } 
  }

  public long null_count {
    set {
      kuzunetPINVOKE.ArrowArray_null_count_set(swigCPtr, value);
    } 
    get {
      long ret = kuzunetPINVOKE.ArrowArray_null_count_get(swigCPtr);
      return ret;
    } 
  }

  public long offset {
    set {
      kuzunetPINVOKE.ArrowArray_offset_set(swigCPtr, value);
    } 
    get {
      long ret = kuzunetPINVOKE.ArrowArray_offset_get(swigCPtr);
      return ret;
    } 
  }

  public long n_buffers {
    set {
      kuzunetPINVOKE.ArrowArray_n_buffers_set(swigCPtr, value);
    } 
    get {
      long ret = kuzunetPINVOKE.ArrowArray_n_buffers_get(swigCPtr);
      return ret;
    } 
  }

  public long n_children {
    set {
      kuzunetPINVOKE.ArrowArray_n_children_set(swigCPtr, value);
    } 
    get {
      long ret = kuzunetPINVOKE.ArrowArray_n_children_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_void buffers {
    set {
      kuzunetPINVOKE.ArrowArray_buffers_set(swigCPtr, SWIGTYPE_p_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = kuzunetPINVOKE.ArrowArray_buffers_get(swigCPtr);
      SWIGTYPE_p_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_ArrowArray children {
    set {
      kuzunetPINVOKE.ArrowArray_children_set(swigCPtr, SWIGTYPE_p_p_ArrowArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = kuzunetPINVOKE.ArrowArray_children_get(swigCPtr);
      SWIGTYPE_p_p_ArrowArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_ArrowArray(cPtr, false);
      return ret;
    } 
  }

  public ArrowArray dictionary {
    set {
      kuzunetPINVOKE.ArrowArray_dictionary_set(swigCPtr, ArrowArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = kuzunetPINVOKE.ArrowArray_dictionary_get(swigCPtr);
      ArrowArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new ArrowArray(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_ArrowArray__void release {
    set {
      kuzunetPINVOKE.ArrowArray_release_set(swigCPtr, SWIGTYPE_p_f_p_ArrowArray__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = kuzunetPINVOKE.ArrowArray_release_get(swigCPtr);
      SWIGTYPE_p_f_p_ArrowArray__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_ArrowArray__void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_void private_data {
    set {
      kuzunetPINVOKE.ArrowArray_private_data_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = kuzunetPINVOKE.ArrowArray_private_data_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public ArrowArray() : this(kuzunetPINVOKE.new_ArrowArray(), true) {
  }

}
