//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class kuzunet {
  public static kuzu_database kuzu_database_init(string database_path, kuzu_system_config system_config) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_database_init(database_path, kuzu_system_config.getCPtr(system_config));
    kuzu_database ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_database(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void kuzu_database_destroy(kuzu_database database) {
    kuzunetPINVOKE.kuzu_database_destroy(kuzu_database.getCPtr(database));
  }

  public static void kuzu_database_set_logging_level(string logging_level) {
    kuzunetPINVOKE.kuzu_database_set_logging_level(logging_level);
  }

  public static kuzu_system_config kuzu_default_system_config() {
    kuzu_system_config ret = new kuzu_system_config(kuzunetPINVOKE.kuzu_default_system_config(), true);
    return ret;
  }

  public static kuzu_connection kuzu_connection_init(kuzu_database database) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_connection_init(kuzu_database.getCPtr(database));
    kuzu_connection ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_connection(cPtr, false);
    return ret;
  }

  public static void kuzu_connection_destroy(kuzu_connection connection) {
    kuzunetPINVOKE.kuzu_connection_destroy(kuzu_connection.getCPtr(connection));
  }

  public static void kuzu_connection_set_max_num_thread_for_exec(kuzu_connection connection, ulong num_threads) {
    kuzunetPINVOKE.kuzu_connection_set_max_num_thread_for_exec(kuzu_connection.getCPtr(connection), num_threads);
  }

  public static ulong kuzu_connection_get_max_num_thread_for_exec(kuzu_connection connection) {
    ulong ret = kuzunetPINVOKE.kuzu_connection_get_max_num_thread_for_exec(kuzu_connection.getCPtr(connection));
    return ret;
  }

  public static kuzu_query_result kuzu_connection_query(kuzu_connection connection, string query) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_connection_query(kuzu_connection.getCPtr(connection), query);
    kuzu_query_result ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_query_result(cPtr, false);
    return ret;
  }

  public static kuzu_prepared_statement kuzu_connection_prepare(kuzu_connection connection, string query) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_connection_prepare(kuzu_connection.getCPtr(connection), query);
    kuzu_prepared_statement ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_prepared_statement(cPtr, false);
    return ret;
  }

  public static kuzu_query_result kuzu_connection_execute(kuzu_connection connection, kuzu_prepared_statement prepared_statement) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_connection_execute(kuzu_connection.getCPtr(connection), kuzu_prepared_statement.getCPtr(prepared_statement));
    kuzu_query_result ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_query_result(cPtr, false);
    return ret;
  }

  public static void kuzu_connection_interrupt(kuzu_connection connection) {
    kuzunetPINVOKE.kuzu_connection_interrupt(kuzu_connection.getCPtr(connection));
  }

  public static void kuzu_connection_set_query_timeout(kuzu_connection connection, ulong timeout_in_ms) {
    kuzunetPINVOKE.kuzu_connection_set_query_timeout(kuzu_connection.getCPtr(connection), timeout_in_ms);
  }

  public static void kuzu_prepared_statement_destroy(kuzu_prepared_statement prepared_statement) {
    kuzunetPINVOKE.kuzu_prepared_statement_destroy(kuzu_prepared_statement.getCPtr(prepared_statement));
  }

  public static bool kuzu_prepared_statement_allow_active_transaction(kuzu_prepared_statement prepared_statement) {
    bool ret = kuzunetPINVOKE.kuzu_prepared_statement_allow_active_transaction(kuzu_prepared_statement.getCPtr(prepared_statement));
    return ret;
  }

  public static bool kuzu_prepared_statement_is_success(kuzu_prepared_statement prepared_statement) {
    bool ret = kuzunetPINVOKE.kuzu_prepared_statement_is_success(kuzu_prepared_statement.getCPtr(prepared_statement));
    return ret;
  }

  public static string kuzu_prepared_statement_get_error_message(kuzu_prepared_statement prepared_statement) {
    string ret = kuzunetPINVOKE.kuzu_prepared_statement_get_error_message(kuzu_prepared_statement.getCPtr(prepared_statement));
    return ret;
  }

  public static void kuzu_prepared_statement_bind_bool(kuzu_prepared_statement prepared_statement, string param_name, bool value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_bool(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, value);
  }

  public static void kuzu_prepared_statement_bind_int64(kuzu_prepared_statement prepared_statement, string param_name, long value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_int64(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, value);
  }

  public static void kuzu_prepared_statement_bind_int32(kuzu_prepared_statement prepared_statement, string param_name, int value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_int32(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, value);
  }

  public static void kuzu_prepared_statement_bind_int16(kuzu_prepared_statement prepared_statement, string param_name, short value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_int16(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, value);
  }

  public static void kuzu_prepared_statement_bind_int8(kuzu_prepared_statement prepared_statement, string param_name, SWIGTYPE_p_int8_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_int8(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, SWIGTYPE_p_int8_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_uint64(kuzu_prepared_statement prepared_statement, string param_name, ulong value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_uint64(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, value);
  }

  public static void kuzu_prepared_statement_bind_uint32(kuzu_prepared_statement prepared_statement, string param_name, SWIGTYPE_p_uint32_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_uint32(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, SWIGTYPE_p_uint32_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_uint16(kuzu_prepared_statement prepared_statement, string param_name, SWIGTYPE_p_uint16_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_uint16(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, SWIGTYPE_p_uint16_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_uint8(kuzu_prepared_statement prepared_statement, string param_name, SWIGTYPE_p_uint8_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_uint8(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, SWIGTYPE_p_uint8_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_double(kuzu_prepared_statement prepared_statement, string param_name, double value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_double(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, value);
  }

  public static void kuzu_prepared_statement_bind_float(kuzu_prepared_statement prepared_statement, string param_name, float value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_float(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, value);
  }

  public static void kuzu_prepared_statement_bind_date(kuzu_prepared_statement prepared_statement, string param_name, kuzu_date_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_date(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, kuzu_date_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_timestamp_ns(kuzu_prepared_statement prepared_statement, string param_name, kuzu_timestamp_ns_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_timestamp_ns(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, kuzu_timestamp_ns_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_timestamp_sec(kuzu_prepared_statement prepared_statement, string param_name, kuzu_timestamp_sec_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_timestamp_sec(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, kuzu_timestamp_sec_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_timestamp_tz(kuzu_prepared_statement prepared_statement, string param_name, kuzu_timestamp_tz_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_timestamp_tz(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, kuzu_timestamp_tz_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_timestamp_ms(kuzu_prepared_statement prepared_statement, string param_name, kuzu_timestamp_ms_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_timestamp_ms(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, kuzu_timestamp_ms_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_timestamp(kuzu_prepared_statement prepared_statement, string param_name, kuzu_timestamp_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_timestamp(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, kuzu_timestamp_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_interval(kuzu_prepared_statement prepared_statement, string param_name, kuzu_interval_t value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_interval(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, kuzu_interval_t.getCPtr(value));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void kuzu_prepared_statement_bind_string(kuzu_prepared_statement prepared_statement, string param_name, string value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_string(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, value);
  }

  public static void kuzu_prepared_statement_bind_value(kuzu_prepared_statement prepared_statement, string param_name, kuzu_value value) {
    kuzunetPINVOKE.kuzu_prepared_statement_bind_value(kuzu_prepared_statement.getCPtr(prepared_statement), param_name, kuzu_value.getCPtr(value));
  }

  public static void kuzu_query_result_destroy(kuzu_query_result query_result) {
    kuzunetPINVOKE.kuzu_query_result_destroy(kuzu_query_result.getCPtr(query_result));
  }

  public static bool kuzu_query_result_is_success(kuzu_query_result query_result) {
    bool ret = kuzunetPINVOKE.kuzu_query_result_is_success(kuzu_query_result.getCPtr(query_result));
    return ret;
  }

  public static string kuzu_query_result_get_error_message(kuzu_query_result query_result) {
    string ret = kuzunetPINVOKE.kuzu_query_result_get_error_message(kuzu_query_result.getCPtr(query_result));
    return ret;
  }

  public static ulong kuzu_query_result_get_num_columns(kuzu_query_result query_result) {
    ulong ret = kuzunetPINVOKE.kuzu_query_result_get_num_columns(kuzu_query_result.getCPtr(query_result));
    return ret;
  }

  public static string kuzu_query_result_get_column_name(kuzu_query_result query_result, ulong index) {
    string ret = kuzunetPINVOKE.kuzu_query_result_get_column_name(kuzu_query_result.getCPtr(query_result), index);
    return ret;
  }

  public static kuzu_logical_type kuzu_query_result_get_column_data_type(kuzu_query_result query_result, ulong index) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_query_result_get_column_data_type(kuzu_query_result.getCPtr(query_result), index);
    kuzu_logical_type ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_logical_type(cPtr, false);
    return ret;
  }

  public static ulong kuzu_query_result_get_num_tuples(kuzu_query_result query_result) {
    ulong ret = kuzunetPINVOKE.kuzu_query_result_get_num_tuples(kuzu_query_result.getCPtr(query_result));
    return ret;
  }

  public static kuzu_query_summary kuzu_query_result_get_query_summary(kuzu_query_result query_result) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_query_result_get_query_summary(kuzu_query_result.getCPtr(query_result));
    kuzu_query_summary ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_query_summary(cPtr, false);
    return ret;
  }

  public static bool kuzu_query_result_has_next(kuzu_query_result query_result) {
    bool ret = kuzunetPINVOKE.kuzu_query_result_has_next(kuzu_query_result.getCPtr(query_result));
    return ret;
  }

  public static kuzu_flat_tuple kuzu_query_result_get_next(kuzu_query_result query_result) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_query_result_get_next(kuzu_query_result.getCPtr(query_result));
    kuzu_flat_tuple ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_flat_tuple(cPtr, false);
    return ret;
  }

  public static string kuzu_query_result_to_string(kuzu_query_result query_result) {
    string ret = kuzunetPINVOKE.kuzu_query_result_to_string(kuzu_query_result.getCPtr(query_result));
    return ret;
  }

  public static void kuzu_query_result_reset_iterator(kuzu_query_result query_result) {
    kuzunetPINVOKE.kuzu_query_result_reset_iterator(kuzu_query_result.getCPtr(query_result));
  }

  public static ArrowSchema kuzu_query_result_get_arrow_schema(kuzu_query_result query_result) {
    ArrowSchema ret = new ArrowSchema(kuzunetPINVOKE.kuzu_query_result_get_arrow_schema(kuzu_query_result.getCPtr(query_result)), true);
    return ret;
  }

  public static ArrowArray kuzu_query_result_get_next_arrow_chunk(kuzu_query_result query_result, long chunk_size) {
    ArrowArray ret = new ArrowArray(kuzunetPINVOKE.kuzu_query_result_get_next_arrow_chunk(kuzu_query_result.getCPtr(query_result), chunk_size), true);
    return ret;
  }

  public static void kuzu_flat_tuple_destroy(kuzu_flat_tuple flat_tuple) {
    kuzunetPINVOKE.kuzu_flat_tuple_destroy(kuzu_flat_tuple.getCPtr(flat_tuple));
  }

  public static kuzu_value kuzu_flat_tuple_get_value(kuzu_flat_tuple flat_tuple, ulong index) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_flat_tuple_get_value(kuzu_flat_tuple.getCPtr(flat_tuple), index);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static string kuzu_flat_tuple_to_string(kuzu_flat_tuple flat_tuple) {
    string ret = kuzunetPINVOKE.kuzu_flat_tuple_to_string(kuzu_flat_tuple.getCPtr(flat_tuple));
    return ret;
  }

  public static kuzu_logical_type kuzu_data_type_create(kuzu_data_type_id id, kuzu_logical_type child_type, ulong fixed_num_elements_in_list) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_data_type_create((int)id, kuzu_logical_type.getCPtr(child_type), fixed_num_elements_in_list);
    kuzu_logical_type ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_logical_type(cPtr, false);
    return ret;
  }

  public static kuzu_logical_type kuzu_data_type_clone(kuzu_logical_type data_type) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_data_type_clone(kuzu_logical_type.getCPtr(data_type));
    kuzu_logical_type ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_logical_type(cPtr, false);
    return ret;
  }

  public static void kuzu_data_type_destroy(kuzu_logical_type data_type) {
    kuzunetPINVOKE.kuzu_data_type_destroy(kuzu_logical_type.getCPtr(data_type));
  }

  public static bool kuzu_data_type_equals(kuzu_logical_type data_type1, kuzu_logical_type data_type2) {
    bool ret = kuzunetPINVOKE.kuzu_data_type_equals(kuzu_logical_type.getCPtr(data_type1), kuzu_logical_type.getCPtr(data_type2));
    return ret;
  }

  public static kuzu_data_type_id kuzu_data_type_get_id(kuzu_logical_type data_type) {
    kuzu_data_type_id ret = (kuzu_data_type_id)kuzunetPINVOKE.kuzu_data_type_get_id(kuzu_logical_type.getCPtr(data_type));
    return ret;
  }

  public static ulong kuzu_data_type_get_fixed_num_elements_in_list(kuzu_logical_type data_type) {
    ulong ret = kuzunetPINVOKE.kuzu_data_type_get_fixed_num_elements_in_list(kuzu_logical_type.getCPtr(data_type));
    return ret;
  }

  public static kuzu_value kuzu_value_create_null() {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_null();
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_create_null_with_data_type(kuzu_logical_type data_type) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_null_with_data_type(kuzu_logical_type.getCPtr(data_type));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static bool kuzu_value_is_null(kuzu_value value) {
    bool ret = kuzunetPINVOKE.kuzu_value_is_null(kuzu_value.getCPtr(value));
    return ret;
  }

  public static void kuzu_value_set_null(kuzu_value value, bool is_null) {
    kuzunetPINVOKE.kuzu_value_set_null(kuzu_value.getCPtr(value), is_null);
  }

  public static kuzu_value kuzu_value_create_default(kuzu_logical_type data_type) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_default(kuzu_logical_type.getCPtr(data_type));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_create_bool(bool val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_bool(val_);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_create_int8(SWIGTYPE_p_int8_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_int8(SWIGTYPE_p_int8_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_int16(short val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_int16(val_);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_create_int32(int val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_int32(val_);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_create_int64(long val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_int64(val_);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_create_uint8(SWIGTYPE_p_uint8_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_uint8(SWIGTYPE_p_uint8_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_uint16(SWIGTYPE_p_uint16_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_uint16(SWIGTYPE_p_uint16_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_uint32(SWIGTYPE_p_uint32_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_uint32(SWIGTYPE_p_uint32_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_uint64(ulong val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_uint64(val_);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_create_int128(kuzu_int128_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_int128(kuzu_int128_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_float(float val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_float(val_);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_create_double(double val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_double(val_);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_create_internal_id(kuzu_internal_id_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_internal_id(kuzu_internal_id_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_date(kuzu_date_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_date(kuzu_date_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_timestamp_ns(kuzu_timestamp_ns_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_timestamp_ns(kuzu_timestamp_ns_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_timestamp_ms(kuzu_timestamp_ms_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_timestamp_ms(kuzu_timestamp_ms_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_timestamp_sec(kuzu_timestamp_sec_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_timestamp_sec(kuzu_timestamp_sec_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_timestamp_tz(kuzu_timestamp_tz_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_timestamp_tz(kuzu_timestamp_tz_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_timestamp(kuzu_timestamp_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_timestamp(kuzu_timestamp_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_interval(kuzu_interval_t val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_interval(kuzu_interval_t.getCPtr(val_));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static kuzu_value kuzu_value_create_string(string val_) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_create_string(val_);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_clone(kuzu_value value) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_clone(kuzu_value.getCPtr(value));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static void kuzu_value_copy(kuzu_value value, kuzu_value other) {
    kuzunetPINVOKE.kuzu_value_copy(kuzu_value.getCPtr(value), kuzu_value.getCPtr(other));
  }

  public static void kuzu_value_destroy(kuzu_value value) {
    kuzunetPINVOKE.kuzu_value_destroy(kuzu_value.getCPtr(value));
  }

  public static ulong kuzu_value_get_list_size(kuzu_value value) {
    ulong ret = kuzunetPINVOKE.kuzu_value_get_list_size(kuzu_value.getCPtr(value));
    return ret;
  }

  public static kuzu_value kuzu_value_get_list_element(kuzu_value value, ulong index) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_get_list_element(kuzu_value.getCPtr(value), index);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static ulong kuzu_value_get_struct_num_fields(kuzu_value value) {
    ulong ret = kuzunetPINVOKE.kuzu_value_get_struct_num_fields(kuzu_value.getCPtr(value));
    return ret;
  }

  public static string kuzu_value_get_struct_field_name(kuzu_value value, ulong index) {
    string ret = kuzunetPINVOKE.kuzu_value_get_struct_field_name(kuzu_value.getCPtr(value), index);
    return ret;
  }

  public static kuzu_value kuzu_value_get_struct_field_value(kuzu_value value, ulong index) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_get_struct_field_value(kuzu_value.getCPtr(value), index);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_get_recursive_rel_node_list(kuzu_value value) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_get_recursive_rel_node_list(kuzu_value.getCPtr(value));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_value_get_recursive_rel_rel_list(kuzu_value value) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_get_recursive_rel_rel_list(kuzu_value.getCPtr(value));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_logical_type kuzu_value_get_data_type(kuzu_value value) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_get_data_type(kuzu_value.getCPtr(value));
    kuzu_logical_type ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_logical_type(cPtr, false);
    return ret;
  }

  public static bool kuzu_value_get_bool(kuzu_value value) {
    bool ret = kuzunetPINVOKE.kuzu_value_get_bool(kuzu_value.getCPtr(value));
    return ret;
  }

  public static SWIGTYPE_p_int8_t kuzu_value_get_int8(kuzu_value value) {
    SWIGTYPE_p_int8_t ret = new SWIGTYPE_p_int8_t(kuzunetPINVOKE.kuzu_value_get_int8(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static short kuzu_value_get_int16(kuzu_value value) {
    short ret = kuzunetPINVOKE.kuzu_value_get_int16(kuzu_value.getCPtr(value));
    return ret;
  }

  public static int kuzu_value_get_int32(kuzu_value value) {
    int ret = kuzunetPINVOKE.kuzu_value_get_int32(kuzu_value.getCPtr(value));
    return ret;
  }

  public static long kuzu_value_get_int64(kuzu_value value) {
    long ret = kuzunetPINVOKE.kuzu_value_get_int64(kuzu_value.getCPtr(value));
    return ret;
  }

  public static SWIGTYPE_p_uint8_t kuzu_value_get_uint8(kuzu_value value) {
    SWIGTYPE_p_uint8_t ret = new SWIGTYPE_p_uint8_t(kuzunetPINVOKE.kuzu_value_get_uint8(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static SWIGTYPE_p_uint16_t kuzu_value_get_uint16(kuzu_value value) {
    SWIGTYPE_p_uint16_t ret = new SWIGTYPE_p_uint16_t(kuzunetPINVOKE.kuzu_value_get_uint16(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static SWIGTYPE_p_uint32_t kuzu_value_get_uint32(kuzu_value value) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(kuzunetPINVOKE.kuzu_value_get_uint32(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static ulong kuzu_value_get_uint64(kuzu_value value) {
    ulong ret = kuzunetPINVOKE.kuzu_value_get_uint64(kuzu_value.getCPtr(value));
    return ret;
  }

  public static kuzu_int128_t kuzu_value_get_int128(kuzu_value value) {
    kuzu_int128_t ret = new kuzu_int128_t(kuzunetPINVOKE.kuzu_value_get_int128(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static kuzu_int128_t kuzu_int128_t_from_string(string str) {
    kuzu_int128_t ret = new kuzu_int128_t(kuzunetPINVOKE.kuzu_int128_t_from_string(str), true);
    return ret;
  }

  public static string kuzu_int128_t_to_string(kuzu_int128_t val) {
    string ret = kuzunetPINVOKE.kuzu_int128_t_to_string(kuzu_int128_t.getCPtr(val));
    if (kuzunetPINVOKE.SWIGPendingException.Pending) throw kuzunetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static float kuzu_value_get_float(kuzu_value value) {
    float ret = kuzunetPINVOKE.kuzu_value_get_float(kuzu_value.getCPtr(value));
    return ret;
  }

  public static double kuzu_value_get_double(kuzu_value value) {
    double ret = kuzunetPINVOKE.kuzu_value_get_double(kuzu_value.getCPtr(value));
    return ret;
  }

  public static kuzu_internal_id_t kuzu_value_get_internal_id(kuzu_value value) {
    kuzu_internal_id_t ret = new kuzu_internal_id_t(kuzunetPINVOKE.kuzu_value_get_internal_id(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static kuzu_date_t kuzu_value_get_date(kuzu_value value) {
    kuzu_date_t ret = new kuzu_date_t(kuzunetPINVOKE.kuzu_value_get_date(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static kuzu_timestamp_t kuzu_value_get_timestamp(kuzu_value value) {
    kuzu_timestamp_t ret = new kuzu_timestamp_t(kuzunetPINVOKE.kuzu_value_get_timestamp(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static kuzu_timestamp_ns_t kuzu_value_get_timestamp_ns(kuzu_value value) {
    kuzu_timestamp_ns_t ret = new kuzu_timestamp_ns_t(kuzunetPINVOKE.kuzu_value_get_timestamp_ns(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static kuzu_timestamp_ms_t kuzu_value_get_timestamp_ms(kuzu_value value) {
    kuzu_timestamp_ms_t ret = new kuzu_timestamp_ms_t(kuzunetPINVOKE.kuzu_value_get_timestamp_ms(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static kuzu_timestamp_sec_t kuzu_value_get_timestamp_sec(kuzu_value value) {
    kuzu_timestamp_sec_t ret = new kuzu_timestamp_sec_t(kuzunetPINVOKE.kuzu_value_get_timestamp_sec(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static kuzu_timestamp_tz_t kuzu_value_get_timestamp_tz(kuzu_value value) {
    kuzu_timestamp_tz_t ret = new kuzu_timestamp_tz_t(kuzunetPINVOKE.kuzu_value_get_timestamp_tz(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static kuzu_interval_t kuzu_value_get_interval(kuzu_value value) {
    kuzu_interval_t ret = new kuzu_interval_t(kuzunetPINVOKE.kuzu_value_get_interval(kuzu_value.getCPtr(value)), true);
    return ret;
  }

  public static string kuzu_value_get_string(kuzu_value value) {
    string ret = kuzunetPINVOKE.kuzu_value_get_string(kuzu_value.getCPtr(value));
    return ret;
  }

  public static SWIGTYPE_p_uint8_t kuzu_value_get_blob(kuzu_value value) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_value_get_blob(kuzu_value.getCPtr(value));
    SWIGTYPE_p_uint8_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
    return ret;
  }

  public static string kuzu_value_get_uuid(kuzu_value value) {
    string ret = kuzunetPINVOKE.kuzu_value_get_uuid(kuzu_value.getCPtr(value));
    return ret;
  }

  public static string kuzu_value_to_string(kuzu_value value) {
    string ret = kuzunetPINVOKE.kuzu_value_to_string(kuzu_value.getCPtr(value));
    return ret;
  }

  public static kuzu_value kuzu_node_val_get_id_val(kuzu_value node_val) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_node_val_get_id_val(kuzu_value.getCPtr(node_val));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_node_val_get_label_val(kuzu_value node_val) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_node_val_get_label_val(kuzu_value.getCPtr(node_val));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static ulong kuzu_node_val_get_property_size(kuzu_value node_val) {
    ulong ret = kuzunetPINVOKE.kuzu_node_val_get_property_size(kuzu_value.getCPtr(node_val));
    return ret;
  }

  public static string kuzu_node_val_get_property_name_at(kuzu_value node_val, ulong index) {
    string ret = kuzunetPINVOKE.kuzu_node_val_get_property_name_at(kuzu_value.getCPtr(node_val), index);
    return ret;
  }

  public static kuzu_value kuzu_node_val_get_property_value_at(kuzu_value node_val, ulong index) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_node_val_get_property_value_at(kuzu_value.getCPtr(node_val), index);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static string kuzu_node_val_to_string(kuzu_value node_val) {
    string ret = kuzunetPINVOKE.kuzu_node_val_to_string(kuzu_value.getCPtr(node_val));
    return ret;
  }

  public static kuzu_value kuzu_rel_val_get_src_id_val(kuzu_value rel_val) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_rel_val_get_src_id_val(kuzu_value.getCPtr(rel_val));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_rel_val_get_dst_id_val(kuzu_value rel_val) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_rel_val_get_dst_id_val(kuzu_value.getCPtr(rel_val));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static kuzu_value kuzu_rel_val_get_label_val(kuzu_value rel_val) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_rel_val_get_label_val(kuzu_value.getCPtr(rel_val));
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static ulong kuzu_rel_val_get_property_size(kuzu_value rel_val) {
    ulong ret = kuzunetPINVOKE.kuzu_rel_val_get_property_size(kuzu_value.getCPtr(rel_val));
    return ret;
  }

  public static string kuzu_rel_val_get_property_name_at(kuzu_value rel_val, ulong index) {
    string ret = kuzunetPINVOKE.kuzu_rel_val_get_property_name_at(kuzu_value.getCPtr(rel_val), index);
    return ret;
  }

  public static kuzu_value kuzu_rel_val_get_property_value_at(kuzu_value rel_val, ulong index) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_rel_val_get_property_value_at(kuzu_value.getCPtr(rel_val), index);
    kuzu_value ret = (cPtr == global::System.IntPtr.Zero) ? null : new kuzu_value(cPtr, false);
    return ret;
  }

  public static string kuzu_rel_val_to_string(kuzu_value rel_val) {
    string ret = kuzunetPINVOKE.kuzu_rel_val_to_string(kuzu_value.getCPtr(rel_val));
    return ret;
  }

  public static kuzu_data_type_id kuzu_rdf_variant_get_type(kuzu_value rdf_variant) {
    kuzu_data_type_id ret = (kuzu_data_type_id)kuzunetPINVOKE.kuzu_rdf_variant_get_type(kuzu_value.getCPtr(rdf_variant));
    return ret;
  }

  public static string kuzu_rdf_variant_get_string(kuzu_value rdf_variant) {
    string ret = kuzunetPINVOKE.kuzu_rdf_variant_get_string(kuzu_value.getCPtr(rdf_variant));
    return ret;
  }

  public static SWIGTYPE_p_uint8_t kuzu_rdf_variant_get_blob(kuzu_value rdf_variant) {
    global::System.IntPtr cPtr = kuzunetPINVOKE.kuzu_rdf_variant_get_blob(kuzu_value.getCPtr(rdf_variant));
    SWIGTYPE_p_uint8_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
    return ret;
  }

  public static long kuzu_rdf_variant_get_int64(kuzu_value rdf_variant) {
    long ret = kuzunetPINVOKE.kuzu_rdf_variant_get_int64(kuzu_value.getCPtr(rdf_variant));
    return ret;
  }

  public static int kuzu_rdf_variant_get_int32(kuzu_value rdf_variant) {
    int ret = kuzunetPINVOKE.kuzu_rdf_variant_get_int32(kuzu_value.getCPtr(rdf_variant));
    return ret;
  }

  public static short kuzu_rdf_variant_get_int16(kuzu_value rdf_variant) {
    short ret = kuzunetPINVOKE.kuzu_rdf_variant_get_int16(kuzu_value.getCPtr(rdf_variant));
    return ret;
  }

  public static SWIGTYPE_p_int8_t kuzu_rdf_variant_get_int8(kuzu_value rdf_variant) {
    SWIGTYPE_p_int8_t ret = new SWIGTYPE_p_int8_t(kuzunetPINVOKE.kuzu_rdf_variant_get_int8(kuzu_value.getCPtr(rdf_variant)), true);
    return ret;
  }

  public static ulong kuzu_rdf_variant_get_uint64(kuzu_value rdf_variant) {
    ulong ret = kuzunetPINVOKE.kuzu_rdf_variant_get_uint64(kuzu_value.getCPtr(rdf_variant));
    return ret;
  }

  public static SWIGTYPE_p_uint32_t kuzu_rdf_variant_get_uint32(kuzu_value rdf_variant) {
    SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(kuzunetPINVOKE.kuzu_rdf_variant_get_uint32(kuzu_value.getCPtr(rdf_variant)), true);
    return ret;
  }

  public static SWIGTYPE_p_uint16_t kuzu_rdf_variant_get_uint16(kuzu_value rdf_variant) {
    SWIGTYPE_p_uint16_t ret = new SWIGTYPE_p_uint16_t(kuzunetPINVOKE.kuzu_rdf_variant_get_uint16(kuzu_value.getCPtr(rdf_variant)), true);
    return ret;
  }

  public static SWIGTYPE_p_uint8_t kuzu_rdf_variant_get_uint8(kuzu_value rdf_variant) {
    SWIGTYPE_p_uint8_t ret = new SWIGTYPE_p_uint8_t(kuzunetPINVOKE.kuzu_rdf_variant_get_uint8(kuzu_value.getCPtr(rdf_variant)), true);
    return ret;
  }

  public static float kuzu_rdf_variant_get_float(kuzu_value rdf_variant) {
    float ret = kuzunetPINVOKE.kuzu_rdf_variant_get_float(kuzu_value.getCPtr(rdf_variant));
    return ret;
  }

  public static double kuzu_rdf_variant_get_double(kuzu_value rdf_variant) {
    double ret = kuzunetPINVOKE.kuzu_rdf_variant_get_double(kuzu_value.getCPtr(rdf_variant));
    return ret;
  }

  public static bool kuzu_rdf_variant_get_bool(kuzu_value rdf_variant) {
    bool ret = kuzunetPINVOKE.kuzu_rdf_variant_get_bool(kuzu_value.getCPtr(rdf_variant));
    return ret;
  }

  public static kuzu_date_t kuzu_rdf_variant_get_date(kuzu_value rdf_variant) {
    kuzu_date_t ret = new kuzu_date_t(kuzunetPINVOKE.kuzu_rdf_variant_get_date(kuzu_value.getCPtr(rdf_variant)), true);
    return ret;
  }

  public static kuzu_timestamp_t kuzu_rdf_variant_get_timestamp(kuzu_value rdf_variant) {
    kuzu_timestamp_t ret = new kuzu_timestamp_t(kuzunetPINVOKE.kuzu_rdf_variant_get_timestamp(kuzu_value.getCPtr(rdf_variant)), true);
    return ret;
  }

  public static kuzu_interval_t kuzu_rdf_variant_get_interval(kuzu_value rdf_variant) {
    kuzu_interval_t ret = new kuzu_interval_t(kuzunetPINVOKE.kuzu_rdf_variant_get_interval(kuzu_value.getCPtr(rdf_variant)), true);
    return ret;
  }

  public static void kuzu_destroy_string(string str) {
    kuzunetPINVOKE.kuzu_destroy_string(str);
  }

  public static void kuzu_query_summary_destroy(kuzu_query_summary query_summary) {
    kuzunetPINVOKE.kuzu_query_summary_destroy(kuzu_query_summary.getCPtr(query_summary));
  }

  public static double kuzu_query_summary_get_compiling_time(kuzu_query_summary query_summary) {
    double ret = kuzunetPINVOKE.kuzu_query_summary_get_compiling_time(kuzu_query_summary.getCPtr(query_summary));
    return ret;
  }

  public static double kuzu_query_summary_get_execution_time(kuzu_query_summary query_summary) {
    double ret = kuzunetPINVOKE.kuzu_query_summary_get_execution_time(kuzu_query_summary.getCPtr(query_summary));
    return ret;
  }

  public static string kuzu_get_version() {
    string ret = kuzunetPINVOKE.kuzu_get_version();
    return ret;
  }

  public static ulong kuzu_get_storage_version() {
    ulong ret = kuzunetPINVOKE.kuzu_get_storage_version();
    return ret;
  }

  public static readonly int ARROW_FLAG_DICTIONARY_ORDERED = kuzunetPINVOKE.ARROW_FLAG_DICTIONARY_ORDERED_get();
  public static readonly int ARROW_FLAG_NULLABLE = kuzunetPINVOKE.ARROW_FLAG_NULLABLE_get();
  public static readonly int ARROW_FLAG_MAP_KEYS_SORTED = kuzunetPINVOKE.ARROW_FLAG_MAP_KEYS_SORTED_get();
}
